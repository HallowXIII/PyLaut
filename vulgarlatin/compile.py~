#http://stackoverflow.com/posts/11158224/revisions
import os,sys,inspect
currentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
parentdir = os.path.dirname(currentdir)
sys.path.insert(0,parentdir) 

from pprint import pprint

import word, phonology

class Lexicon(object):
    #stores all the words
    words = []
    
    #initialised properly by init_phonology() once the first stage words are all
    #loaded
    _phonology = None
    _factory = None

    def init_phonology():
        #extract phonemes
        phonemes = set()
        for entry in Lexicon.words:
            #TODO: a call to a real IPA tokeniser
            for symbol in entry.ipa:
                if symbol not in "'.":
                    phonemes.add(symbol)

        #TODO: make phone.py look up monophone's location properly rather than 
        #assume it is in the working directory
        Lexicon._phonology = phonology.Phonology(list(phonemes))
        Lexicon._factory = word.WordFactory(Lexicon._phonology)
        
        for latin_word in Lexicon.words:
            latin_word.set_phonetic()
        
    def __init__(self,ipa_string,ortho_string,gloss):
        self.ipa = ipa_string
        self.orthography = ortho_string
        self.gloss = gloss
        self.phonetic = None
        Lexicon.words += [self]
    
    def lexicon_entry(self):
        return "{} {}: {}".format(self.orthography,self.__repr__(),self.gloss)
                 
    def __repr__(self):
        if self.phonetic:
            return str(self.phonetic)
        else:
            return "*/"+self.ipa+"/"
    
    def set_phonetic(self):
        self.phonetic = Lexicon._factory.make_word(self.ipa)
            
################################################################################

with open("vulgarlatin.lex","r") as raw_lexicon:
    read_words = [x for x in raw_lexicon.read().splitlines() if x[0] != "#"]
    split_words = [x.split() for x in read_words]

#make Lexicons
for line in split_words:
    Lexicon(*line)

Lexicon.init_phonology()

for word in Lexicon.words:
    print(word.lexicon_entry())


